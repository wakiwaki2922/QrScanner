# Tên của quy trình làm việc, sẽ hiển thị trong tab "Actions" trên GitHub
name: Build Executable

# Điều kiện kích hoạt: chạy quy trình này khi một bản phát hành (release) mới được tạo
on:
  release:
    types: [created]

# Cấp quyền cho GITHUB_TOKEN
permissions:
  contents: write

# Các công việc (jobs) cần thực hiện
jobs:
  build:
    # Chạy trên một máy ảo Windows mới nhất do GitHub cung cấp
    runs-on: windows-latest

    steps:
      # Bước 1: Lấy mã nguồn từ repository về máy ảo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Bước 2: Cài đặt Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.9' # Bạn có thể đổi phiên bản Python nếu muốn

      # Bước 3: Cài đặt các thư viện Python cần thiết
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # Bước 4: Clean build để đảm bảo fresh build
      - name: Clean previous builds
        run: |
          if (Test-Path "build") { Remove-Item -Recurse -Force "build" }
          if (Test-Path "__pycache__") { Remove-Item -Recurse -Force "__pycache__" }

      # Bước 5: Build ứng dụng với optimizations để giảm false positive
      - name: Build optimized executable with PyInstaller
        run: pyinstaller QRScanner.spec --clean

      # Bước 6: Verify build success
      - name: Verify build
        run: |
          if (Test-Path "./dist/QRScanner.exe") {
            Write-Host "✅ Build successful!"
            $size = (Get-Item "./dist/QRScanner.exe").Length / 1MB
            Write-Host "📦 File size: $([math]::Round($size, 2)) MB"
          } else {
            Write-Host "❌ Build failed - executable not found!"
            exit 1
          }

      # Bước 7: Find and install Windows SDK for signing
      - name: Setup Windows SDK for signing
        run: |
          # Find SignTool.exe in Windows SDK
          $signToolPaths = @(
            "C:\Program Files (x86)\Windows Kits\10\bin\*\x64\signtool.exe",
            "C:\Program Files\Microsoft SDKs\Windows\*\bin\x64\signtool.exe"
          )
          
          $signTool = $null
          foreach ($path in $signToolPaths) {
            $found = Get-ChildItem $path -ErrorAction SilentlyContinue | Select-Object -First 1
            if ($found) {
              $signTool = $found.FullName
              break
            }
          }
          
          if ($signTool) {
            Write-Host "✅ Found SignTool: $signTool"
            echo "SIGNTOOL_PATH=$signTool" >> $env:GITHUB_ENV
          } else {
            Write-Host "⚠️ SignTool not found - executable will be unsigned"
            echo "SIGNTOOL_PATH=" >> $env:GITHUB_ENV
          }

      # Bước 8: Create self-signed certificate and sign executable
      - name: Sign executable (reduces false positives)
        run: |
          if ($env:SIGNTOOL_PATH) {
            try {
              # Create self-signed certificate
              Write-Host "🔐 Creating self-signed certificate..."
              $cert = New-SelfSignedCertificate -Subject "CN=QR Scanner Pro Ltd" -Type CodeSigningCert -KeySpec KeyExchange -KeyLength 2048 -Provider "Microsoft Enhanced Cryptographic Provider v1.0" -CertStoreLocation "cert:\CurrentUser\My" -KeyUsage DigitalSignature,KeyEncipherment -TextExtension @('2.5.29.37={text}1.3.6.1.5.5.7.3.3')
              
              # Export certificate to PFX
              $password = ConvertTo-SecureString -String "GitHub2025" -Force -AsPlainText
              Export-PfxCertificate -Cert $cert -FilePath "GitHubCert.pfx" -Password $password
              
              # Sign the executable
              Write-Host "🖊️ Signing executable..."
              & $env:SIGNTOOL_PATH sign /f GitHubCert.pfx /p GitHub2025 /fd SHA256 /tr http://timestamp.sectigo.com /td SHA256 /v "./dist/QRScanner.exe"
              
              if ($LASTEXITCODE -eq 0) {
                Write-Host "✅ Executable signed successfully!"
                
                # Verify signature
                & $env:SIGNTOOL_PATH verify /pa /v "./dist/QRScanner.exe"
                echo "IS_SIGNED=true" >> $env:GITHUB_ENV
              } else {
                Write-Host "⚠️ Signing failed, but continuing with unsigned executable"
                echo "IS_SIGNED=false" >> $env:GITHUB_ENV
              }
            } catch {
              Write-Host "⚠️ Signing error: $($_.Exception.Message)"
              Write-Host "Continuing with unsigned executable"
              echo "IS_SIGNED=false" >> $env:GITHUB_ENV
            }
          } else {
            Write-Host "⚠️ SignTool not available - skipping signing"
            echo "IS_SIGNED=false" >> $env:GITHUB_ENV
          }

      # Bước 9: Create hash file for integrity verification
      - name: Generate checksums
        run: |
          $hash = Get-FileHash "./dist/QRScanner.exe" -Algorithm SHA256
          "$($hash.Hash)  QRScanner-${{ github.ref_name }}.exe" | Out-File -FilePath "./dist/checksums.txt" -Encoding UTF8
          Write-Host "📋 SHA256: $($hash.Hash)"

      # Bước 10: Upload files to release with enhanced metadata
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./dist/QRScanner.exe
            ./dist/checksums.txt
          name: QRScanner-${{ github.ref_name }}.exe
          body: |
            ## 🔍 QR Scanner Pro v${{ github.ref_name }}
            
            ### ✨ Tính năng:
            - Quét QR code từ màn hình
            - Copy kết quả tự động vào clipboard
            - Giao diện thân thiện
            - Không cần kết nối internet
            
            ### 🛡️ Bảo mật:
            - ✅ Signed digitally để giảm false positive
            - ✅ Source code public và minh bạch  
            - ✅ Chỉ sử dụng thư viện tin cậy
            - ✅ Không thu thập dữ liệu cá nhân
            
            ### 📦 Thông tin file:
            - **File**: QRScanner-${{ github.ref_name }}.exe (~25MB)
            - **SHA256**: Xem file checksums.txt
            - **Signed**: ${{ env.IS_SIGNED == 'true' && 'Yes (Self-signed certificate)' || 'No (Unable to sign)' }}
            
            ### ❗ Antivirus False Positive
            Nếu antivirus báo false positive:
            1. Đây là vấn đề thường gặp với PyInstaller
            2. File đã được signed để giảm thiểu
            3. Submit false positive report tới antivirus vendor
            4. Hoặc tải source code và build locally
            
            ### 📞 Hỗ trợ:
            - GitHub Issues: [Báo lỗi tại đây](https://github.com/${{ github.repository }}/issues)
            - Source Code: [Xem mã nguồn](https://github.com/${{ github.repository }})
